"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/hooks/useSolanaOperations.tsx":
/*!**************************************************!*\
  !*** ./components/hooks/useSolanaOperations.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSolanaOperations: () => (/* binding */ useSolanaOperations)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"(app-pages-browser)/./node_modules/@solana/wallet-adapter-react/lib/esm/useConnection.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"(app-pages-browser)/./node_modules/@solana/wallet-adapter-react/lib/esm/useWallet.js\");\n/* harmony import */ var _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @coral-xyz/anchor */ \"(app-pages-browser)/./node_modules/@coral-xyz/anchor/dist/browser/index.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"(app-pages-browser)/./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/spl-token */ \"(app-pages-browser)/./node_modules/@solana/spl-token/lib/esm/constants.js\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @solana/spl-token */ \"(app-pages-browser)/./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @solana/spl-token */ \"(app-pages-browser)/./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-sha256 */ \"(app-pages-browser)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_3__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/buffer/index.js\")[\"Buffer\"];\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nconst programId = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey(\"8V6oDMwNGK694Gw9VpDaLtVpjpeqDoWG5Bci1vhygPCw\");\nconst useSolanaOperations = ()=>{\n    _s();\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [createTxSignature, setCreateTxSignature] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [mintTxSignature, setMintTxSignature] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const { connection } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__.useConnection)();\n    const wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__.useWallet)();\n    const handleCreateMint = async (tokenName, savedMints, setSavedMints)=>{\n        if (!wallet.publicKey || !wallet.signTransaction) return alert(\"Please connect your wallet!\");\n        if (!tokenName) return alert(\"Please enter a name for your token!\");\n        setIsLoading(true);\n        try {\n            const newMint = _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.Keypair.generate();\n            const instructionName = \"create_loyalty_mint\";\n            const discriminator = Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_3___default().digest(\"global:\".concat(instructionName))).slice(0, 8);\n            const instruction = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.TransactionInstruction({\n                keys: [\n                    {\n                        pubkey: newMint.publicKey,\n                        isSigner: true,\n                        isWritable: true\n                    },\n                    {\n                        pubkey: wallet.publicKey,\n                        isSigner: true,\n                        isWritable: true\n                    },\n                    {\n                        pubkey: _solana_spl_token__WEBPACK_IMPORTED_MODULE_6__.TOKEN_PROGRAM_ID,\n                        isSigner: false,\n                        isWritable: false\n                    },\n                    {\n                        pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.SystemProgram.programId,\n                        isSigner: false,\n                        isWritable: false\n                    }\n                ],\n                programId,\n                data: discriminator\n            });\n            const latestBlockhash = await connection.getLatestBlockhash('finalized');\n            const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.Transaction({\n                feePayer: wallet.publicKey,\n                recentBlockhash: latestBlockhash.blockhash\n            }).add(instruction);\n            transaction.partialSign(newMint);\n            const signedTransaction = await wallet.signTransaction(transaction);\n            const signature = await connection.sendRawTransaction(signedTransaction.serialize());\n            await connection.confirmTransaction({\n                ...latestBlockhash,\n                signature\n            }, 'processed');\n            const newMintAddress = newMint.publicKey.toBase58();\n            const newMintData = {\n                address: newMintAddress,\n                name: tokenName,\n                createdAt: new Date().toISOString()\n            };\n            const updatedMints = [\n                ...savedMints,\n                newMintData\n            ];\n            setSavedMints(updatedMints);\n            localStorage.setItem(\"solrewards-mints\", JSON.stringify(updatedMints));\n            setCreateTxSignature(signature);\n            return newMintData;\n        } catch (error) {\n            console.error(\"Error creating mint:\", error);\n            alert(\"Failed to create loyalty program. See console for details.\");\n            throw error;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const handleMintPoints = async (activeMint, recipientAddress, mintQuantity)=>{\n        if (!wallet.publicKey || !wallet.signTransaction || !activeMint) return alert(\"Program not selected or wallet not connected!\");\n        setIsLoading(true);\n        setMintTxSignature(null);\n        try {\n            const recipient = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey(recipientAddress);\n            const mint = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey(activeMint.address);\n            const associatedTokenAccount = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_7__.getAssociatedTokenAddress)(mint, recipient);\n            const instructions = [];\n            const accountInfo = await connection.getAccountInfo(associatedTokenAccount);\n            if (!accountInfo) {\n                instructions.push((0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_8__.createAssociatedTokenAccountInstruction)(wallet.publicKey, associatedTokenAccount, recipient, mint));\n            }\n            const instructionName = \"mint_loyalty_points\";\n            const discriminator = Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_3___default().digest(\"global:\".concat(instructionName))).slice(0, 8);\n            const quantityBuffer = Buffer.alloc(8);\n            quantityBuffer.writeBigUInt64LE(BigInt(mintQuantity));\n            instructions.push(new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.TransactionInstruction({\n                keys: [\n                    {\n                        pubkey: mint,\n                        isSigner: false,\n                        isWritable: true\n                    },\n                    {\n                        pubkey: wallet.publicKey,\n                        isSigner: true,\n                        isWritable: false\n                    },\n                    {\n                        pubkey: associatedTokenAccount,\n                        isSigner: false,\n                        isWritable: true\n                    },\n                    {\n                        pubkey: _solana_spl_token__WEBPACK_IMPORTED_MODULE_6__.TOKEN_PROGRAM_ID,\n                        isSigner: false,\n                        isWritable: false\n                    }\n                ],\n                programId,\n                data: Buffer.concat([\n                    discriminator,\n                    quantityBuffer\n                ])\n            }));\n            const latestBlockhash = await connection.getLatestBlockhash();\n            const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.Transaction({\n                recentBlockhash: latestBlockhash.blockhash,\n                feePayer: wallet.publicKey\n            }).add(...instructions);\n            const signedTransaction = await wallet.signTransaction(transaction);\n            const signature = await connection.sendRawTransaction(signedTransaction.serialize());\n            await connection.confirmTransaction({\n                ...latestBlockhash,\n                signature\n            }, 'processed');\n            setMintTxSignature(signature);\n        } catch (error) {\n            console.error(\"Error minting points:\", error);\n            alert(\"Failed to mint points. See console for details.\");\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    return {\n        handleCreateMint,\n        handleMintPoints,\n        isLoading,\n        createTxSignature,\n        mintTxSignature,\n        setCreateTxSignature,\n        setMintTxSignature\n    };\n};\n_s(useSolanaOperations, \"0DGykiPYOoPCip0MepmTQ1TN9no=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__.useConnection,\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__.useWallet\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/hooks/useSolanaOperations.tsx\n"));

/***/ })

});